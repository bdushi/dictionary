/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package al.bruno;

import al.bruno.data.source.DictionaryDataSource;
import al.bruno.di.DictionaryModule;
import al.bruno.model.Dictionary;
import dagger.internal.codegen.DaggerComponentProcessor_ProcessorComponent;

import javax.inject.Inject;

public class App {
    public static void main(String[] args) {
        System.out.print("************************************\n");
        System.out.print("*      Dictionary Start Running    *\n");
        System.out.print("************************************\n");
        new App(args);
        /*BoxStore store = MyObjectBox.builder().name("objectbox-dictionary-db").build();
        Box<Dictionary> box = store.boxFor(Dictionary.class);

        String text;
        if (args.length > 0) {
            text = String.join(" ", args);
        } else {
            text = "No text given";
        }
        box.put(new Dictionary(text, text));
        System.out.println(box.count() + " notes in ObjectBox database:");
        for (Dictionary dictionary : box.getAll()) {
            System.out.println(dictionary.toString());
        }
        store.close();*/
    }

    private App(String[] args) {
        DaggerComponentProcessor_ProcessorComponent.builder().build();
        //DictionaryComponent logComponent = DaggerComponentProcessor_ProcessorComponent.builder().build();
        /*
        // The line above does the same as the following line
        LogComponent logComponent = DaggerLogComponent
                .builder()
                .logModule(new LogModule())
                .build();
        */
        //logComponent.injectDepsIntoFieldsOf(this);
        dictionaryDataSource.put(new Dictionary("test", "test"));
    }

    @Inject
    DictionaryDataSource dictionaryDataSource;
}
